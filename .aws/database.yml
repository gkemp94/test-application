AWSTemplateFormatVersion: 2010-09-09
Description: Creates Application Database

Parameters:
  NetworkStack:
    Type: String
    Default: core-infra

Resources:
  # Creates a Secret for Username & Password
  RDSSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: 'This is my rds instance secret'
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
  
  SubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub ${AWS::StackName}-subnet-group
      DBSubnetGroupDescription: Group of subnets for database
      SubnetIds:
            - Fn::ImportValue: 
                !Sub '${NetworkStack}-publicsubneta'
            - Fn::ImportValue: 
                !Sub '${NetworkStack}-publicsubnetb'
    
  SecretRDSInstanceAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    DependsOn: RDSCluster
    Properties:
      SecretId: !Ref RDSSecret
      TargetId: !Ref RDSCluster
      TargetType: AWS::RDS::DBCluster


  RDSCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref RDSSecret, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref RDSSecret, ':SecretString:password}}' ]]
      Engine: aurora
      EngineMode: serverless
      ScalingConfiguration:
        AutoPause: true
        MinCapacity: 2
        MaxCapacity: 16
      DBSubnetGroupName:
        Ref: SubnetGroup


Outputs:
  RDSSecret:
    Value: !Ref RDSSecret
    Export:
      Name: !Sub ${AWS::StackName}-rds-secret
